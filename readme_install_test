
// source code subsection: 



module overmind::price_oracle {
    //==============================================================================================
    // Dependencies
    //==============================================================================================
    use std::signer;
    use std::string::String;
    use aptos_framework::event;
    use std::table::{Self, Table};
    use aptos_framework::timestamp;
    use aptos_framework::account::{Self, SignerCapability};

    #[test_only]
    use aptos_framework::string;

    //==============================================================================================
    // Constants - DO NOT MODIFY
    //==============================================================================================
    
    // seed for the module's resource account
    const SEED: vector<u8> = b"price oracle";
    
    //==============================================================================================
    // Error codes - DO NOT MODIFY
    //==============================================================================================
    const ErrorCodeForAllAborts: u64 = 1238177394;

    //==============================================================================================
    // Module Structs - DO NOT MODIFY
    //==============================================================================================

    /* 
        Holds price information for a specific coin pair
    */
    struct Price has copy, store, drop {
        // the price of the pair - with 8 decimal places
		price: u128, 
        // the confidence interval for the price - with 8 decimal places
        // the price is accurate within +/- confidence value
		confidence: u128
    }


 /* 
        Holds price feed information for a specific price
    */
    struct PriceFeed has copy, store, drop {
        // the timestamp of when the price was attested (submitted by the admin)
        latest_attestation_timestamp_seconds: u64,
        // the id of the coin pair - e.g. "APT/USDT"
        pair: String, 
        // the latest, attested price of the pair
        price: Price
    }

    /* 
        table of all price feeds. To be owned by the module's resource account
    */
    struct PriceBoard has key {
        // the table mapping all coin pair ids to their price feed
        // e.g. "APT/USDT" -> PriceFeed { ... }
        prices: Table<String, PriceFeed>
    }

    /* 
        Holds information to be used in the module. To be owned by the module's resource account
    */
    struct State has key {
        // the signer cap of the module's resource account
        signer_cap: SignerCapability, 
        // events
        price_feed_updated_event: event::EventHandle<PriceFeedUpdatedEvent>
    }
    
    //==============================================================================================
    // Event structs - DO NOT MODIFY
    //==============================================================================================

    /* 
        Event to be emitted when a price feed is updated
    */
    struct PriceFeedUpdatedEvent has store, drop {
        // the id of the coin pair - e.g. "APT/USDT"
        pair: String,
        // the latest, attested price of the pair
        price: Price, 
        // the timestamp of when the price was attested (submitted by the admin)
        update_timestamp_seconds: u64
    }

    //==============================================================================================
    // Functions
    //==============================================================================================

    /* 
        Initializes the module by creating the resource account, and setting up the State and 
            PriceBoard resources
        @param admin - signer representing the oracle admin
    */
    fun init_module(admin: &signer) { 
        // TODO: Create the resource account with admin account and provided SEED constant

        // TODO: Create the module's State resource and move it to the resource account

        // TODO: Create the module's PriceBoard resource and move it to the resource account
    }

    /* 
        Adds or updates the price of a specified pair. This function can only be called by the 
        oracle admin. Abort if the caller is not the admin.
        @param admin - signer representing the oracle admin
        @param pair - id/coin pair identifying the coin pair price being updated
        @param price - the new price scaled with 8 decimal places
        @param confidence - the interval of confidence for the price scaled with 8 decimal places
    */
    public entry fun update_price_feed(
        admin: &signer, 
        pair: String,
        price: u128, 
        confidence: u128
    ) acquires State, PriceBoard {

    }

    /* 
        Returns the latest price as long as it is attested within the default maximum attestation 
        duration. The default maximum attestation duration is defined by the 
        MAXIMUM_FRESH_DURATION_SECONDS constant. Abort if the price is stale or if the pair does
        not exist.
        @param pair - id of the coin pair being updated
        @return - the price of the pair along with the confidence
    */
    public fun get_price(pair: String): Price acquires PriceBoard {

    }

    /* 
        Returns the latest price as long as it is attested no later than maximum_age_seconds ago.
        Abort if the price is stale or if the pair does not exist.
        @param pair - id of the coin pair being updated
        @param maximum_age_seconds - the maximum age of the price in seconds the request price can be
        @return - the price of the pair along with the confidence
    */
    public fun get_price_no_older_than(pair: String, maximum_age_seconds: u64): Price 
    acquires PriceBoard {
        
    }

    /* 
        Returns the latest price regardless of when it was attested. Abort if the pair does not
        exist.
        @param pair - id of the coin pair being updated
        @return - the price of the pair along with the confidence, and the timestamp of when the 
                    the price was attested
    */
    public fun get_price_unsafe(pair: String): (Price, u64) acquires PriceBoard {
        
    }

    //==============================================================================================
    // Helper functions
    //==============================================================================================
    
    //==============================================================================================
    // Validation functions
    //==============================================================================================

    //==============================================================================================
    // Tests - DO NOT MODIFY
    //==============================================================================================

    #[test(admin = @overmind, user = @0xA)]
    fun test_init_module_success(
        admin: &signer, 
        user: &signer
    ) acquires State {
        let admin_address = signer::address_of(admin);
        let user_address = signer::address_of(user);
        account::create_account_for_test(admin_address);
        account::create_account_for_test(user_address);

        let aptos_framework = account::create_account_for_test(@aptos_framework);
        timestamp::set_time_has_started_for_testing(&aptos_framework);

        init_module(admin);

        let expected_resource_account_address = account::create_resource_address(&@overmind, b"price oracle");

        assert!(exists<PriceBoard>(expected_resource_account_address), 0);
        assert!(exists<State>(expected_resource_account_address), 0);

        let state = borrow_global<State>(expected_resource_account_address);
        assert!(
            account::get_signer_capability_address(&state.signer_cap) == expected_resource_account_address,
            0
        );

        assert!(event::counter(&state.price_feed_updated_event) == 0, 0);
    }

    #[test(admin = @overmind, user = @0xA)]
    fun test_update_price_feed_success_add_one_new_pair_zero_confidence_value(
        admin: &signer,
        user: &signer
    ) acquires State, PriceBoard {
        let admin_address = signer::address_of(admin);
        let user_address = signer::address_of(user);
        account::create_account_for_test(admin_address);
        account::create_account_for_test(user_address);

        let aptos_framework = account::create_account_for_test(@aptos_framework);
        timestamp::set_time_has_started_for_testing(&aptos_framework);

        init_module(admin);

        let resource_account_address = account::create_resource_address(&@overmind, SEED);

        let pair = string::utf8(b"APT/USDT");
        let apt_usd = 691000000;
        let usdt_usd = 99880000;
        let apt_usdt = apt_usd * 100000000 / usdt_usd;
        let confidence = 0;


        update_price_feed(
            admin, 
            pair, 
            apt_usdt, 
            confidence
        );

        let price_board = borrow_global<PriceBoard>(resource_account_address);
        let prices = &price_board.prices;
        assert!(
            table::contains(prices, pair),
            0
        );
        let PriceFeed {
            latest_attestation_timestamp_seconds: actual_attestation_timestamp,
            pair: actual_pair, 
            price: Price { price: actual_price, confidence: actual_confidence }
        } = table::borrow(prices, pair);
        assert!(
            *actual_attestation_timestamp == timestamp::now_seconds(),
            0   
        );
        assert!(
            *actual_pair == pair,
            0
        );
        assert!(
            *actual_price == apt_usdt,
            0
        );
        assert!(
            *actual_confidence == confidence,
            0
        );

        let state = borrow_global<State>(resource_account_address);
        assert!(event::counter(&state.price_feed_updated_event) == 1, 0);
    }
}










 /home/ubuntu/.local/bin/aptos init
Aptos already initialized for profile default, do you want to overwrite the existing config? [yes/no] >
yes
Configuring for profile default
Choose network from [devnet, testnet, mainnet, local, custom | defaults to devnet]
devnet
Enter your private key as a hex literal (0x...) [Current: Redacted | No input: Generate new key (or keep one if present)]

No key given, keeping existing key...
Account 0xf55cd6df0a44ae71196a932b6b1f9dea475de17e09d891fac75b22ac80a9318c has been already found onchain

---
Aptos CLI is now set up for account 0xf55cd6df0a44ae71196a932b6b1f9dea475de17e09d891fac75b22ac80a9318c as profile default!  Run `aptos --help` for more information about commands
{
  "Result": "Success"
}





ubuntu@ip-172-31-35-62:~$ aptos account fund-with-faucet --account default
{
  "Result": "Added 100000000 Octas to account 0xf55cd6df0a44ae71196a932b6b1f9dea475de17e09d891fac75b22ac80a9318c"
}
ubuntu@ip-172-31-35-62:~$


ubuntu@ip-172-31-35-62:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos    move compile --named-addresses overmind=0xf55cd6df0a44ae71196a932b6b1f9dea475de17e09d891fac75b22ac80a9318c
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
warning[W09001]: unused alias
  ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:5:14
  │
5 │     use std::signer;
  │              ^^^^^^ Unused 'use' of alias 'signer'. Consider removing it

warning[W09001]: unused alias
  ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:8:14
  │
8 │     use std::table::{Self, Table};
  │              ^^^^^ Unused 'use' of alias 'table'. Consider removing it

warning[W09001]: unused alias
  ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:9:26
  │
9 │     use aptos_framework::timestamp;
  │                          ^^^^^^^^^ Unused 'use' of alias 'timestamp'. Consider removing it

warning[W09001]: unused alias
   ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:10:26
   │
10 │     use aptos_framework::account::{Self, SignerCapability};
   │                          ^^^^^^^ Unused 'use' of alias 'account'. Consider removing it

error[E04007]: incompatible types
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:131:67
    │
131 │         public fun get_price(pair: String): Price acquires PriceBoard {
    │                                             ----- Expected: '(overmind=0xF55CD6DF0A44AE71196A932B6B1F9DEA475DE17E09D891FAC75B22AC80A9318C)::price_oracle::Price'
    │ ╭─────────────────────────────────────────────────────────────────────^
    │ │ ╭───────────────────────────────────────────────────────────────────'
132 │ │ │
133 │ │ │     }
    │ ╰─│─────^ Invalid return expression
    │   ╰─────' Given: '()'

error[E04007]: incompatible types
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:143:25
    │
142 │         public fun get_price_no_older_than(pair: String, maximum_age_seconds: u64): Price
    │                                                                                     ----- Expected: '(overmind=0xF55CD6DF0A44AE71196A932B6B1F9DEA475DE17E09D891FAC75B22AC80A9318C)::price_oracle::Price'
143 │         acquires PriceBoard {
    │ ╭───────────────────────────^
    │ │ ╭─────────────────────────'
144 │ │ │
145 │ │ │     }
    │ ╰─│─────^ Invalid return expression
    │   ╰─────' Given: '()'

error[E04007]: incompatible types
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:154:81
    │
154 │         public fun get_price_unsafe(pair: String): (Price, u64) acquires PriceBoard {
    │                                                    ------------ Expected: '((overmind=0xF55CD6DF0A44AE71196A932B6B1F9DEA475DE17E09D891FAC75B22AC80A9318C)::price_oracle::Price, u64)'
    │ ╭───────────────────────────────────────────────────────────────────────────────────^
    │ │ ╭─────────────────────────────────────────────────────────────────────────────────'
155 │ │ │
156 │ │ │     }
    │ ╰─│─────^ Invalid return expression
    │   ╰─────' Given: '()'

{
  "Error": "Move compilation failed: Compilation error"
}
ubuntu@ip-172-31-35-62:~/aptos-core/aptos-move/move-examples/hello_blockchain$












# error in compilation



ubuntu@ip-172-31-35-62:~/aptos-core/aptos-move/move-examples/hello_blockchain$ /home/ubuntu/.local/bin/aptos    move compile --named-addresses overmind=0xf55cd6df0a44ae71196a932b6b1f9dea475de17e09d891fac75b22ac80a9318c
Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING Examples
warning[W09001]: unused alias
  ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:5:14
  │
5 │     use std::signer;
  │              ^^^^^^ Unused 'use' of alias 'signer'. Consider removing it

warning[W09001]: unused alias
  ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:8:14
  │
8 │     use std::table::{Self, Table};
  │              ^^^^^ Unused 'use' of alias 'table'. Consider removing it

warning[W09001]: unused alias
  ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:9:26
  │
9 │     use aptos_framework::timestamp;
  │                          ^^^^^^^^^ Unused 'use' of alias 'timestamp'. Consider removing it

warning[W09001]: unused alias
   ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:10:26
   │
10 │     use aptos_framework::account::{Self, SignerCapability};
   │                          ^^^^^^^ Unused 'use' of alias 'account'. Consider removing it

warning[W09002]: unused variable
   ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:98:21
   │
98 │     fun init_module(admin: &signer) {
   │                     ^^^^^ Unused parameter 'admin'. Consider removing or prefixing with an underscore: '_admin'

warning[W09002]: unused variable
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:115:9
    │
115 │         admin: &signer,
    │         ^^^^^ Unused parameter 'admin'. Consider removing or prefixing with an underscore: '_admin'

warning[W09002]: unused variable
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:116:9
    │
116 │         pair: String,
    │         ^^^^ Unused parameter 'pair'. Consider removing or prefixing with an underscore: '_pair'

warning[W09002]: unused variable
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:117:9
    │
117 │         price: u128,
    │         ^^^^^ Unused parameter 'price'. Consider removing or prefixing with an underscore: '_price'

warning[W09002]: unused variable
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:118:9
    │
118 │         confidence: u128
    │         ^^^^^^^^^^ Unused parameter 'confidence'. Consider removing or prefixing with an underscore: '_confidence'

error[E02002]: unnecessary or extraneous item
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:119:16
    │
119 │     ) acquires State, PriceBoard {
    │                ^^^^^ Invalid 'acquires' list. The struct '(overmind=0xF55CD6DF0A44AE71196A932B6B1F9DEA475DE17E09D891FAC75B22AC80A9318C)::price_oracle::State' was never acquired by 'move_from', 'borrow_global', 'borrow_global_mut', or a transitive call

error[E02002]: unnecessary or extraneous item
    ┌─ /home/ubuntu/aptos-core/aptos-move/move-examples/hello_blockchain/sources/overland.move:119:23
    │
119 │     ) acquires State, PriceBoard {
    │                       ^^^^^^^^^^ Invalid 'acquires' list. The struct '(overmind=0xF55CD6DF0A44AE71196A932B6B1F9DEA475DE17E09D891FAC75B22AC80A9318C)::price_oracle::PriceBoard' was never acquired by 'move_from', 'borrow_global', 'borrow_global_mut', or a transitive call

{
  "Error": "Move compilation failed: Compilation error"
}













